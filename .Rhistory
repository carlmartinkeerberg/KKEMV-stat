rmarkdown::render_site()
rmarkdown::render_site(encoding = "UTF-8")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
View(tab)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = tab[c(1:93),]
alltotalavg = na.omit(as.numeric(speakers$TOTALAVG))
meantotalavg = mean(na.omit(as.numeric(speakers$TOTALAVG)))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(72.25, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80)
breaks = 6)
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80),
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(72.25, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = tab[c(1:62),]
alltotalavg = na.omit(as.numeric(speakers$TOTALAVG))
meantotalavg = mean(na.omit(as.numeric(speakers$TOTALAVG)))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80),
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(73, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
library(knitr)
kable(speakers,
caption = "VÃ¤itlejad")
```{r}
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = tab[c(1:62),]
alltotalavg = na.omit(as.numeric(speakers$TOTALAVG))
meantotalavg = mean(na.omit(as.numeric(speakers$TOTALAVG)))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80),
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(73, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
View(tab)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = tab[c(1:93),]
alltotalavg = na.omit(as.numeric(speakers$TOTALAVG))
meantotalavg = mean(na.omit(as.numeric(speakers$TOTALAVG)))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80),
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(73, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
View(speakers)
totalspeakers = data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG))
totalspeakers
totalspeakers = data.frame(speakers$SPEAKER, na.omit(as.numeric(speakers$TOTALAVG)))
totalspeakers = data.frame(speakers$SPEAKER, na.omit(as.numeric(speakers$TOTALAVG))
totalspeakers = data.frame(speakers$SPEAKER, na.omit(as.numeric(speakers$TOTALAVG))
totalspeakers = data.frame(speakers$SPEAKER, na.omit(as.numeric(speakers$TOTALAVG)))
totalspeakers = data.framena.omit((speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
totalspeakers = data.frame(na.omit((speakers$SPEAKER, as.numeric(speakers$TOTALAVG))))
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
totalspeakers
max(totalspeakers)
max(totalspeakers$as.numeric.speakers.TOTALAVG.)
totalspeakers = na.omit(matrix(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
tmp=sort(totalspeakers$as.numeric.speakers.TOTALAVG., decreasing=T)
tmp
totalspeakers
library(knitr)
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
kable(totalspeakers,
caption = "Keskmised spiikripunktid")
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
maxspeakers = max(totalspeakers$as.numeric.speakers.TOTALAVG.)
bestspeaker = totalspeakers$speakers.SPEAKER[which(totalspeakers$as.numeric.speakers.TOTALAVG.==maxspeakers)), ]
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
maxspeakers = max(totalspeakers$as.numeric.speakers.TOTALAVG.)
bestspeaker = totalspeakers$speakers.SPEAKER[which(totalspeakers$as.numeric.speakers.TOTALAVG.==maxspeakers), ]
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
maxspeakers = max(totalspeakers$as.numeric.speakers.TOTALAVG.)
bestspeaker = totalspeakers$speakers.SPEAKER[which(totalspeakers$as.numeric.speakers.TOTALAVG. == (maxspeakers), ]
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
maxspeakers = max(totalspeakers$as.numeric.speakers.TOTALAVG.)
bestspeaker = totalspeakers[which(totalspeakers$as.numeric.speakers.TOTALAVG. == maxspeakers, ]
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
maxspeakers = max(totalspeakers$as.numeric.speakers.TOTALAVG.)
bestspeaker = totalspeakers[which.max(totalspeakers$as.numeric.speakers.TOTALAVG.),]
bestspeaker
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
bestspeaker = totalspeakers[which.max(totalspeakers$as.numeric.speakers.TOTALAVG.),]
print(bestspeaker)
View(tab)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = T,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
View(tab)
teams_header = tab[c(63:63), ]
teams = tab[c(64:81), ]
teams
teams_header
teams_header = tab[c(63), c(1:39) ]
teams = tab[c(64:81), ]
teams_header
tmp=grep("TEAMS", tab)
tmp
tmp=grep(as.character("TEAMS"), tab)
tmp
View(tab)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
View(tab)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
teams = tab[c(65:82),]
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
teams = tab[c(65:82),]
teams_header = tab[c(64),]
teams_header
teams_header = c(tab[c(64),])
teams_header
teams = data.frame(tab[c(65:82),])
teams
names(team) = teams_header
teams = data.frame(tab[c(65:82),])
teams_header = c(tab[c(64),])
names(teams) = teams_header
teams
View(teams)
teams_header
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
teams = data.frame(tab[c(65:82),])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teams
View(teams)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
View(teams)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
speakers_header = c(tab[c(1), ])
names(speakers) = speakers_header
alltotalavg = na.omit(as.numeric(speakers$TOTALAVG))
meantotalavg = mean(na.omit(as.numeric(speakers$TOTALAVG)))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80),
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(73, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
bestspeaker = totalspeakers[which.max(totalspeakers$as.numeric.speakers.TOTALAVG.),]
print(bestspeaker)
View(speakers)
speakerteam = speakers$SPEAKER, speakers$TEAM
speakerteam = (speakers$SPEAKER, speakers$TEAM)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teamnames = teams$TEAM
speakerteam = data.frame(speakers$SPEAKER, speakers$TEAM)
View(speakerteam)
teamspeakers = speakerteam[which(speakerteam$speakers.TEAM==teamnames),]
teamspeakers = na.omit(data.frame(speakers$TEAM, speakers$TOTALAVG))
teamspeakers
teamspeakers = na.omit(data.frame(as.character(speakers$TEAM), as.numeric(speakers$TOTALAVG)))
teamspeakers
view(teamspeakers)
View(teamspeakers)
team_member_speakers = na.omit(data.frame(as.character(speakers$TEAM), as.numeric(speakers$TOTALAVG)))
sum(team_member_speakers)
sum(team_member_speakers$as.numeric.speakers.TOTALAVG.)
team_total_speakers = aggregate(team_member_speakers$as.character.speakers.TEAM. ~ team_member_speakers$as.numeric.speakers.TOTALAVG., sum)
team_total_speakers = aggregate(as.character.speakers.TEAM. ~ as.numeric.speakers.TOTALAVG., data=team_member_speakers, sum)
team_total_speakers = tapply(team_member_speakers$as.character.speakers.TEAM., team_member_speakers$as.numeric.speakers.TOTALAVG., FUN=sum)
View(team_member_speakers)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
team_member_speakers = na.omit(data.frame(as.character(speakers$TEAM), as.numeric(speakers$TOTALAVG)))
tapply(team_member_speakers$as.character.speakers.TEAM., team_member_speakers$as.numeric.speakers.TOTALAVG., FUN=sum)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teamspeakers = tapply(speakers$TEAM, as.numeric(speakers$TOTALAVG), FUN=sum)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teamspeakers = tapply(as.character(speakers$TEAM), as.numeric(speakers$TOTALAVG), FUN=sum)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teamspeakers = tapply(as.numeric(speakers$TOTALAVG), as.character(speakers$TEAM), FUN=sum)
teamspeakers
View(teamspeakers)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teamspeakers = tapply(na.omit(as.numeric(speakers$TOTALAVG)), as.character(speakers$TEAM), FUN=sum)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teamspeakers = tapply(na.omit(as.numeric(speakers$TOTALAVG)), na.omit(speakers$TEAM), FUN=sum)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
teamspeakers = tapply(as.numeric(speakers$TOTALAVG), speakers$TEAM, FUN=sum)
View(teamspeakers)
View(speakers)
indv_speakers=as.numeric(speakers$TOTALAVG)[is.na(as.numeric(speakers$TOTALAVG))] = 0
indv_speakers = as.numeric(speakers$TOTALAVG)
indv_speakers = indv_speakers[is.na(indv_speakers)] = 0
teamspeakers = tapply(indv_speakers, speakers$TEAM, FUN=sum)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
indv_speakers = as.numeric(speakers$TOTALAVG)
indv_speakers = indv_speakers[is.na(indv_speakers)] = 0
teamnames = speakers$TEAM
teamspeakers = tapply(indv_speakers, teamnames, FUN=sum)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
indv_speakers = speakers$TOTALAVG
indv_speakers = as.numeric(indv_speakers[is.na(indv_speakers)] = 0)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
indv_speakers = speakers$TOTALAVG
indv_speakers = indv_speakers[is.na(indv_speakers)] = 0
indv_speakers = as.numeric(indv_speakers)
teamnames = speakers$TEAM
teamspeakers = tapply(indv_speakers, teamnames, FUN=sum)
plot(speakers$R1AVG, speakers$R2AVG, speakers$R3AVG, speakers$R4AVG, speakers$R5AVG)
plot(as.numeric(speakers$R1AVG),
as.numeric(speakers$R2AVG),
as.numeric(speakers$R3AVG),
as.numeric(speakers$R4AVG),
as.numeric(speakers$R5AVG))
plot(as.numeric(speakers$R1AVG),
as.numeric(speakers$R2AVG))
View(teams)
teams_speakers_wins = data.frame(teams$TEAM, teams$TOTAL, sum(speakers$TOTALAVG)[speakers$TEAM])
aggregate(speakers$TOTALAVG, by=list(teams$TEAM), FUN=sum)
View(speakers)
aggregate(speakers$TOTALAVG, by=list(teams$TEAM), FUN=sum)[4]
aggregate(speakers$TOTALAVG, by=list(speakers$TEAM), FUN=sum)
aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
plot(teams$TOTAL, team_speakers)
View(team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
plot(na.omit(teams$TOTAL), na.omit(team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
plot(na.omit(teams$TOTAL), na.omit(team_speakers))
nrows(team_speakers)
nrow(team_speakers)
nrow(teams$TOTAL)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
plot(teams$TOTAL, team_speakers)
nrow(teams$TOTAL)
team_wins = as.numeric(teams$TOTAL)
nrow(team_wins)
team_wins
ncol(team_wins)
c(team_wins)
nrow(c(team_wins))
type(team_wins)
class(team_wins)
typeof(team_wins)
class(team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_wins = data.frame(as.numeric(teams$TOTAL))
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_wins = data.frame(as.numeric(teams$TOTAL))
plot(team_wins, team_speakers)
View(team_wins)
tmp=team_wins$as.numeric.teams.TOTAL.
class(tmp)
team_speakers = team_speakers$x
team_speakers
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_speakers = team_speakers$x
team_wins = as.numeric(teams$TOTAL)
plot(team_wins, team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_speakers = na.omit(team_speakers$x)
team_wins = as.numeric(teams$TOTAL)
plot(team_wins, team_speakers)
View(team_speakers)
view(team_wins)
View(team_wins)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_wins_speakers = data.frame(teams$TEAM, as.numeric(teams$TOTAL), team_speakers$x)
team_wins_speakers = data.frame(teams$TEAM, as.numeric(teams$TOTAL), aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum))
View(team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
View(team_wins)
mutate
?mutate
??mutate
?remove
remove("No Team")
tmp=1:4
tmp
rm(tmp)
team_speakers$Group.1("No Team")
team_speakers$Group.1["No Team"]
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_speakers[-c("No Team"), ]
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)
team_speakers[-c(14), ]
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
plot(team_wins, team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
plot(team_wins$as.numeric.teams.TOTAL., team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
plot(team_wins$as.numeric.teams.TOTAL., team_speakers$x)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speakers = data.frame(team_wins$teams.TEAM, team_wins$as.numeric.teams.TOTAL., team_speakers$x)
View(team_wins_speakers)
View(team_speakers)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
order(team_wins$teams.TEAM)
View(team_wins)
order(team_wins)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(order(teams$TEAM), as.numeric(teams$TOTAL))
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(sort.list(teams$TEAM), as.numeric(teams$TOTAL))
View(team_wins)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame(sort(teams$TEAM), as.numeric(teams$TOTAL))
View(team_wins)
View(team_wins)
team_speakers = aggregate(as.numeric(speakers$TOTALAVG), by=list(speakers$TEAM), FUN=sum)[-c(14), ]
team_wins = data.frame((teams$TEAM), as.numeric(teams$TOTAL))
merge(team_speakers, team_wins)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
teams = data.frame(tab[c(65:82), c(1:27)])
teams_header = c(tab[c(64), c(1:27)])
names(teams) = teams_header
View(teams)
speakers = data.frame(tab[c(2:63),])
speakers_header = c(tab[c(1), ])
names(speakers) = speakers_header
tmp = merge(teams, speakers)
tmp = merge(teams, speakers, by("TEAM"))
View(speakers)
