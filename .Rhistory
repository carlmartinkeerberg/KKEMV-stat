kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
View(diffs)
judges = data.frame(tab[c(127:143), c(1:21)])
names(judges) = c(tab[c(126), c(1:21)])
View(judges)
View(speakers)
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="Erinevus"
name="Kohtunik"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="Erinevus"
name="Kohtunik"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tab = read.csv("c:/Users/carlm/Desktop/tab.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
View(tab)
speakers = data.frame(tab[c(2:49),])
names(speakers) = c(tab[c(1), ])
View(speakers)
library(knitr)
for (r in 1:5){
eval(parse(text=paste("kindness_", r, "=data.frame(as.numeric(speakers$R", r, "J1)- as.numeric(speakers$TOTALAVG), speakers$R", r, "J1NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, ")=c(", diff, ",", name, ")", sep="")))
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_1, kindness_2, kindness_3, kindness_4, kindness_5))
diffs = aggregate(.~name, diffs, mean)
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
library(knitr)
for (r in 1:5){
eval(parse(text=paste("kindness_", r, "=data.frame(as.numeric(speakers$R", r, "J1)- as.numeric(speakers$TOTALAVG), speakers$R", r, "J1NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, ")=c(", diff, ",", name, ")", sep="")))
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_1, kindness_2, kindness_3, kindness_4, kindness_5))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
sort(diffs$diff)
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
diffs[order(diffs$Erinevus),]
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
diffs = diffs[order(diffs$Erinevus),]
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
View(diffs)
diffs = diffs[order(diffs$Erinevus),]
View(diffs)
rownames(diffs) = c()
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tmp = mean(as.numeric(speakers$TOTALAVG))
tmp
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
diffs = diffs[order(diffs$Erinevus),]
rownames(diffs) = c()
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tmp = na.omit(as.numeric(speakers$TOTALAVG))
tmp
sd(tmp)
View(diffs)
plot(diffs)
plot(diffs$Erinevus)
hist(diffs$Erinevus)
hist(diffs$Erinevus, breaks=10)
plot(diffs$Erinevus)
hist(diffs$Erinevus, breaks=10)
plot(diffs$Erinevus)
lm(diffs$Erinevus)
plot(diffs$Erinevus, "b")
plot(diffs$Erinevus, type="b")
sd(diffs$Erinevus)
plot(diffs$Erinevus,
main = "Kohtunike kõrvalekalle",
xlab = "Kohtunik",
ylab = "Erinevus")
plot(diffs$Erinevus,
main = "Kohtunike kõrvalekalle",
xlab = "Kohtunik",
ylab = "Erinevus")
abline(c(5,))
abline(c(5,0))
plot(diffs$Erinevus,
main = "Kohtunike kõrvalekalle",
xlab = "Kohtunik",
ylab = "Erinevus")
abline(c(5,0))
plot(diffs$Erinevus,
main = "Kohtunike kõrvalekalle",
xlab = "Kohtunik",
ylab = "Erinevus")
abline(c(5))
teams = data.frame(tab[c(65:82), c(1:27)])
names(teams) = c(tab[c(64), c(1:27)])
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speak, mean)
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
View(team_speaks)
View(team_wins_speaks)
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speaks = team_wins_speaks[order(team_wins_speaks$teams.TEAM),]
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
team_speaks = team_speaks[order(team_speaks$team),]
team_wins_speaks$speaks = team_speaks$speaks
View(team_wins_speaks)
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speaks = team_wins_speaks[order(team_wins_speaks$teams.TEAM),]
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
team_speaks = team_speaks[order(team_speaks$team),]
team_wins_speaks$speaks = team_speaks$speaks
plot(team_wins_speaks$as.numeric.teams.TOTAL., team_wins_speaks$speaks)
lm(team_wins_speaks$as.numeric.teams.TOTAL., team_wins_speaks$speaks)
plot(team_wins_speaks$as.numeric.teams.TOTAL.,
team_wins_speaks$speaks,
type = "b")
trend.line(team_wins_speaks$as.numeric.teams.TOTAL., team_wins_speaks$speaks)
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speaks = team_wins_speaks[order(team_wins_speaks$teams.TEAM),]
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
team_speaks = team_speaks[order(team_speaks$team),]
team_wins_speaks$speaks = team_speaks$speaks
fit = team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks
plot(fit)
abline(fit)
plot(fit)
abline(fit)
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speaks = team_wins_speaks[order(team_wins_speaks$teams.TEAM),]
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
team_speaks = team_speaks[order(team_speaks$team),]
team_wins_speaks$speaks = team_speaks$speaks
fit = team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks
plot(fit)
abline(fit)
plot(fit, type="B")
plot(fit, type="b")
fit = glm(team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks)
plot(fit)
fit = glm(team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks)
plot(team_wins_speaks$as.numeric.teams.TOTAL., team_wins_speaks$speaks)
abline(fit)
fit = glm(team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks)
plot(team_wins_speaks$as.numeric.teams.TOTAL., team_wins_speaks$speaks)
abline(fit, lwd=2, col="blue")
fit
2~3
plot(2~3)
plot(c(1,2,3)~c(4,5,6))
plot(team_wins_speaks$speaks, team_wins_speaks$as.numeric.teams.TOTAL.)
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speaks = team_wins_speaks[order(team_wins_speaks$teams.TEAM),]
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
team_speaks = team_speaks[order(team_speaks$team),]
team_wins_speaks$speaks = team_speaks$speaks
fit = glm(team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks)
plot(team_wins_speaks$speaks, team_wins_speaks$as.numeric.teams.TOTAL.)
abline(fit, lwd=2, col="blue")
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speaks = team_wins_speaks[order(team_wins_speaks$teams.TEAM),]
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
team_speaks = team_speaks[order(team_speaks$team),]
team_wins_speaks$speaks = team_speaks$speaks
fit = glm(team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks)
plot(team_wins_speaks$speaks, team_wins_speaks$as.numeric.teams.TOTAL.,
main = "Tiimi võitude ja tiimi keskmiste spiikripunktide suhe",
xlab = "Spiikripunkte",
ylab = "Võite")
abline(fit, lwd=2, col="blue")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
for (r in 1:5){
for (j in 1:3){
score = paste("speakers$R", r, "J", j, sep="")
name = paste("speakers$R", r, "J", j, "NAME", sep="")
entry = paste("kindness_", r, j)
eval(parse(text=entry"="(score-as.numeric(speakers$TOTALAVG)), name))
for (r in 1:5){
for (j in 1:3){
score = paste("speakers$R", r, "J", j, sep="")
name = paste("speakers$R", r, "J", j, "NAME", sep="")
entry = paste("kindness_", r, j)
eval(parse(text=entry,"=",(score-as.numeric(speakers$TOTALAVG)), name))
}
}
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
diffs = diffs[order(diffs$Erinevus),]
rownames(diffs) = c()
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
View(diffs)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:94),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
eval(parse(text=paste("kindness_", r, "=data.frame(as.numeric(speakers$R", r, "J1)- as.numeric(speakers$TOTALAVG), speakers$R", r, "J1NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, ")=c(", diff, ",", name, ")", sep="")))
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_1, kindness_2, kindness_3, kindness_4, kindness_5))
diffs = aggregate(.~name, diffs, mean)
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
View(diffs)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
View(diffs)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:94),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
eval(parse(text=paste("kindness_", r, "=data.frame(as.numeric(speakers$R", r, "J1)- as.numeric(speakers$TOTALAVG), speakers$R", r, "J1NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, ")=c(", diff, ",", name, ")", sep="")))
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_1, kindness_2, kindness_3, kindness_4, kindness_5))
diffs = aggregate(.~name, diffs, mean)
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
diffs = diffs[order(diffs$Erinevus),]
rownames(diffs) = c()
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:94),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
eval(parse(text=paste("kindness_", r, "=data.frame(as.numeric(speakers$R", r, "J1)- as.numeric(speakers$TOTALAVG), speakers$R", r, "J1NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, ")=c(", diff, ",", name, ")", sep="")))
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_1, kindness_2, kindness_3, kindness_4, kindness_5))
diffs = aggregate(.~name, diffs, mean)
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
diffs$diff_div_sd = as.numeric(diffs$Erinevus)/speaker_sd
library(knitr)
for (r in 1:5){
eval(parse(text=paste("kindness_", r, "=data.frame(as.numeric(speakers$R", r, "J1)- as.numeric(speakers$TOTALAVG), speakers$R", r, "J1NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, ")=c(", diff, ",", name, ")", sep="")))
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_1, kindness_2, kindness_3, kindness_4, kindness_5))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
diffs = diffs[order(diffs$Erinevus),]
rownames(diffs) = c()
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp_vene.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:49),])
names(speakers) = c(tab[c(1), ])
library(knitr)
for (r in 1:5){
eval(parse(text=paste("kindness_", r, "=data.frame(as.numeric(speakers$R", r, "J1)- as.numeric(speakers$TOTALAVG), speakers$R", r, "J1NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, ")=c(", diff, ",", name, ")", sep="")))
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_1, kindness_2, kindness_3, kindness_4, kindness_5))
diffs = aggregate(.~name, diffs, mean)
names(diffs) = c("Kohtunik", "Erinevus")
diffs = diffs[order(diffs$Erinevus),]
rownames(diffs) = c()
speaker_sd = sd(as.numeric(speakers$TOTALAVG), na.rm=T)
diffs$diff_div_sd = diffs$Erinevus/speaker_sd
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
