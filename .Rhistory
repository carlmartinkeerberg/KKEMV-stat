kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
teams = data.frame(tab[c(65:82), c(1:27)])
names(teams) = c(tab[c(64), c(1:27)])
judges = data.frame(tab[c(84:106), c(1:21)])
names(judges) = c(tab[c(83), c(1:21)])
View(judges)
View(teams)
judge_pos_bias = data.frame(judges$JUDGE,
judges$R1P, judges$R1O,
judges$R2P, judges$R2O,
judges$R3P, judges$R3O,
judges$R4P, judges$R4O,
judges$R5P, judges$R5O
)
sum(judge_pos_bias$judges.R1P)
judge_pos_bias = data.frame(judges[,c("Judge", "R1P")])
judge_pos_bias = data.frame(judges[c("Judge", "R1P"),])
View(judge_pos_bias)
judge_pos_bias = data.frame(judges[,c("Judge", "R1P")])
View(judges)
judge_pos_bias = data.frame(judges[c(1:nrow(judges)) ,c("Judge", "R1P")])
judge_pos_bias = data.frame(judges[c(1:(nrow(judges)) ,c("Judge", "R1P")])
judge_pos_bias = data.frame(judges[c(1:nrow(judges) ,c(1, 12)])
View(teams)
View(judges)
View(speakers)
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
for (r in 1:5){
for (j in 1:3){
eval(parse(text=paste("kindness_", r, j, "=data.frame(as.numeric(speakers$R", r, "J", j, ")- as.numeric(speakers$TOTALAVG), speakers$R", r, "J", j, "NAME)", sep="")))
diff="diff"
name="name"
eval(parse(text=paste("names(kindness_", r, j, ")=c(", diff, ",", name, ")", sep="")))
eval(parse(text=paste("kindness_", r, j, "=aggregate(. ~", name, ", kindness_", r, j, ", mean)", sep="")))
}
}
diffs = Reduce(function(x, y) merge(x, y, all=TRUE), list(kindness_11, kindness_12, kindness_13,
kindness_21, kindness_22, kindness_23,
kindness_31, kindness_32, kindness_33,
kindness_41, kindness_42, kindness_43,
kindness_51, kindness_52, kindness_53))
View(diffs)
View(speakers)
df=data.frame(speakers$R1J1NAME, as.numeric(speakers$R1J1),
speakers$R1J2NAME, as.numeric(speakers$R1J2),
speakers$R1J3NAME, as.numeric(speakers$R1J3),
speakers$R2J1NAME, as.numeric(speakers$R2J1),
speakers$R2J2NAME, as.numeric(speakers$R2J2),
speakers$R2J3NAME, as.numeric(speakers$R2J3),
speakers$R3J1NAME, as.numeric(speakers$R3J1),
speakers$R3J2NAME, as.numeric(speakers$R3J2),
speakers$R3J3NAME, as.numeric(speakers$R3J3),
speakers$R4J1NAME, as.numeric(speakers$R4J1),
speakers$R4J2NAME, as.numeric(speakers$R4J2),
speakers$R4J3NAME, as.numeric(speakers$R4J3),
speakers$R5J1NAME, as.numeric(speakers$R5J1),
speakers$R5J2NAME, as.numeric(speakers$R5J2),
speakers$R5J3NAME, as.numeric(speakers$R5J3))
View(df)
judge_names=c(speakers$R1J1NAME, speakers$R1J2NAME)
judge_names
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2))
judge_scores
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
diffs = data.frame(judge_names, judge_scores)
View(diffs)
diffs = aggregate(.~judge_names, diffs, mean)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores, speaker_avg)
#diffs = aggregate(.~judge_names, diffs, mean)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg)
diffs = aggregate(.~judge_names, diffs, mean)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
diffs = diffs[order(diffs$judge_scores...speaker_avg),]
rownames(diffs) = c()
names(diffs) = c("Kohtunik", "Erinevus", "Erinevus/Spiikrite SH")
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
diffs = diffs[order(diffs$judge_scores...speaker_avg),]
rownames(diffs) = c()
names(diffs) = c("Kohtunik", "Erinevus", "Erinevus/Spiikrite SH")
library(knitr)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
diffs = diffs[order(diffs$judge_scores...speaker_avg),]
rownames(diffs) = c()
names(diffs) = c("Kohtunik", "Erinevus", "Erinevus/Spiikrite SH")
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:63),])
names(speakers) = c(tab[c(1), ])
teams = data.frame(tab[c(65:82), c(1:27)])
names(teams) = c(tab[c(64), c(1:27)])
judges = data.frame(tab[c(84:106), c(1:21)])
names(judges) = c(tab[c(83), c(1:21)])
alltotalavg = na.omit(as.numeric(speakers$TOTALAVG))
meantotalavg = mean(na.omit(as.numeric(speakers$TOTALAVG)))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80),
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(73, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
library(knitr)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
diffs = diffs[order(diffs$judge_scores...speaker_avg),]
rownames(diffs) = c()
names(diffs) = c("Kohtunik", "Erinevus", "Erinevus/Spiikrite SH")
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
team_wins_speaks = data.frame(teams$TEAM, as.numeric(teams$TOTAL))
team_wins_speaks = team_wins_speaks[order(team_wins_speaks$teams.TEAM),]
team_speaks = data.frame(speakers$TEAM, as.numeric(speakers$TOTALAVG))
names(team_speaks) = c("team", "speaks")
team_speaks = aggregate(.~team, team_speaks, mean)
team_speaks = team_speaks[order(team_speaks$team),]
team_wins_speaks$speaks = team_speaks$speaks
fit = glm(team_wins_speaks$as.numeric.teams.TOTAL.~team_wins_speaks$speaks)
plot(team_wins_speaks$speaks, team_wins_speaks$as.numeric.teams.TOTAL.,
main = "Tiimi võitude ja tiimi keskmiste spiikripunktide suhe",
xlab = "Spiikripunkte",
ylab = "Võite")
abline(fit, lwd=2, col="blue")
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakes = mean(na.omit(as.numeric(c(speakers$R1AVG, speakers$R2AVG, speakers$R3AVG, speakers$R4AVG, speakers$R5AVG))))
#mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
mean_speakers = mean(na.omit(as.numeric(c(speakers$R1AVG, speakers$R2AVG, speakers$R3AVG, speakers$R4AVG, speakers$R5AVG))))
#mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
tmp=c(1,2,3,4)
mean(tmp)
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakers = c(mean(as.numeric(speakers$R1AVG)),
mean(as.numeric(speakers$R2AVG)),
mean(as.numeric(speakers$R3AVG)),
mean(as.numeric(speakers$R4AVG)),
mean(as.numeric(speakers$R5AVG)))
#mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG))),
mean(as.numeric(speakers$R2AVG)),
mean(as.numeric(speakers$R3AVG)),
mean(as.numeric(speakers$R4AVG)),
mean(as.numeric(speakers$R5AVG)))
#mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG, speakers$R2AVG, speakers$R3AVG, speakers$R4AVG, speakers$R5AVG))))
#mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakers = c(na.omit(mean(as.numeric(speakers$R1AVG)),
mean(as.numeric(speakers$R2AVG)),
mean(as.numeric(speakers$R3AVG)),
mean(as.numeric(speakers$R4AVG)),
mean(as.numeric(speakers$R5AVG))))
#mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
r1_ms = mean(na.omit(as.numeric(speakers$R1AVG)))
r2_ms = mean(na.omit(as.numeric(speakers$R2AVG)))
r3_ms = mean(na.omit(as.numeric(speakers$R3AVG)))
r4_ms = mean(na.omit(as.numeric(speakers$R4AVG)))
r5_ms = mean(na.omit(as.numeric(speakers$R5AVG)))
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG))),
mean(na.omit(as.numeric(speakers$R2AVG))),
mean(na.omit(as.numeric(speakers$R3AVG))),
mean(na.omit(as.numeric(speakers$R4AVG))),
mean(na.omit(as.numeric(speakers$R5AVG))))
#mean_speakers = c(r1_ms, r2_ms, r3_ms, r4_ms, r5_ms)
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/IIetapp_vene.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:49),])
names(speakers) = c(tab[c(1), ])
library(knitr)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
diffs = diffs[order(diffs$judge_scores...speaker_avg),]
rownames(diffs) = c()
names(diffs) = c("Kohtunik", "Erinevus", "Erinevus/Spiikrite SH")
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
tab = read.csv("https://github.com/carlmartinkeerberg/KKEMV-stat/raw/master/Ietapp.csv",
header = F,
sep = ";",
encoding = "UTF-8",
dec = ".",
stringsAsFactors = F)
speakers = data.frame(tab[c(2:94),])
names(speakers) = c(tab[c(1), ])
teams = data.frame(tab[c(96:125), c(1:27)])
names(teams) = c(tab[c(95), c(1:27)])
judges = data.frame(tab[c(127:143), c(1:21)])
names(judges) = c(tab[c(126), c(1:21)])
totalspeakers = na.omit(data.frame(speakers$SPEAKER, as.numeric(speakers$TOTALAVG)))
bestspeaker = totalspeakers[which.max(totalspeakers$as.numeric.speakers.TOTALAVG.),]
print(bestspeaker)
alltotalavg = na.omit(as.numeric(speakers$TOTALAVG))
meantotalavg = mean(na.omit(as.numeric(speakers$TOTALAVG)))
hist(alltotalavg,
main = "Keskmised spiikripunktid",
xlab = "Punktid",
ylab = "Sagedus",
xlim = c(60, 80),
breaks = 6)
abline(v = meantotalavg,
col = "blue",
lwd = 2.5)
legend(73, 20,
c("Aritm keskmine"),
lwd = c(2.5),
col = c("blue"))
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG))),
mean(na.omit(as.numeric(speakers$R2AVG))),
mean(na.omit(as.numeric(speakers$R3AVG))),
mean(na.omit(as.numeric(speakers$R4AVG))),
mean(na.omit(as.numeric(speakers$R5AVG))))
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
library(knitr)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
diffs = diffs[order(diffs$judge_scores...speaker_avg),]
rownames(diffs) = c()
names(diffs) = c("Kohtunik", "Erinevus", "Erinevus/Spiikrite SH")
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
library(knitr)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(na.omit((c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3)))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
library(knitr)
judge_names = c(speakers$R1J1NAME, speakers$R1J2NAME, speakers$R1J3NAME,
speakers$R2J1NAME, speakers$R2J2NAME, speakers$R2J3NAME,
speakers$R3J1NAME, speakers$R3J2NAME, speakers$R3J3NAME,
speakers$R4J1NAME, speakers$R4J2NAME, speakers$R4J3NAME,
speakers$R5J1NAME, speakers$R5J2NAME, speakers$R5J3NAME)
judge_scores = as.numeric(c(speakers$R1J1, speakers$R1J2, speakers$R1J3,
speakers$R2J1, speakers$R2J2, speakers$R2J3,
speakers$R3J1, speakers$R3J2, speakers$R3J3,
speakers$R4J1, speakers$R4J2, speakers$R4J3,
speakers$R5J1, speakers$R5J2, speakers$R5J3))
speaker_avg = as.numeric(c(speakers$TOTALAVG))
diffs = data.frame(judge_names, judge_scores - speaker_avg, (judge_scores - speaker_avg)/sd(speaker_avg, na.rm = T))
diffs = aggregate(.~judge_names, diffs, mean)
diffs = diffs[order(diffs$judge_scores...speaker_avg),]
rownames(diffs) = c()
names(diffs) = c("Kohtunik", "Erinevus", "Erinevus/Spiikrite SH")
kable(diffs, caption = "Kohtuniku keskmine kõrvalekalle kõneleja keskmistest spiikritest")
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG))),
mean(na.omit(as.numeric(speakers$R2AVG))),
mean(na.omit(as.numeric(speakers$R3AVG))),
mean(na.omit(as.numeric(speakers$R4AVG))),
mean(na.omit(as.numeric(speakers$R5AVG))))
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG, speakers$R2AVG, speakers$R3AVG))))
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG))),
mean(na.omit(as.numeric(speakers$R2AVG))),
mean(na.omit(as.numeric(speakers$R3AVG))),
mean(na.omit(as.numeric(speakers$R4AVG))),
mean(na.omit(as.numeric(speakers$R5AVG))))
mean_speakers = mean(c((na.omit(as.numeric(speakers$R1AVG, speakers$R2AVG, speakers$R3AVG)))
plot(mean_speakers,
mean_speakers = c(mean(na.omit(as.numeric(speakers$R1AVG))),
mean(na.omit(as.numeric(speakers$R2AVG))),
mean(na.omit(as.numeric(speakers$R3AVG))),
mean(na.omit(as.numeric(speakers$R4AVG))),
mean(na.omit(as.numeric(speakers$R5AVG))))
mean_speakers = mean(c((na.omit(as.numeric(speakers$R1AVG, speakers$R2AVG, speakers$R3AVG)))))
plot(mean_speakers,
main = "Keskmised spiikripunktid läbi voorude",
xlab = "Voor",
ylab = "Punkte",
ylim = c(68, 72),
type = "b")
